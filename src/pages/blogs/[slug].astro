---
import Layout from "@layouts/Layout.astro"
import { db } from "@lib/db"
import { and, count, eq } from "drizzle-orm";
import { blogTable, userTable,commentsTable, viewTable } from "@lib/db/schema";
import { Icon } from 'astro-icon/components'

const { slug } = Astro.params;

const user = {
    id:1
};

const blogs = await db
    .select({
        id: blogTable.id,
        title: blogTable.title,
        content: blogTable.content,
        description: blogTable.description,
        createdAt: blogTable.createdAt,
        authorName: userTable.name,
        image: blogTable.image,
        authorId: blogTable.authorId,
    })
    .from(blogTable)
    .innerJoin(userTable, eq(blogTable.authorId, userTable.id))
    .where(eq(blogTable.id, Number(slug)));

if (!blogs.length) return Astro.redirect("/blogs");

const blog = blogs[0];

//comments
const comments = await db
    .select({
        content: commentsTable.content,
        name: userTable.name,
        userId: userTable.id,
        createdAt: commentsTable.createdAt,
    })
    .from(commentsTable)
    .innerJoin(userTable, eq(commentsTable.userId, userTable.id))
    .where(eq(commentsTable.blogId, blog.id));

//create view if not exits
db.insert(viewTable).values({
    userId: user.id,
    blogId: blog.id,
}).onConflictDoNothing()

/************ fetch likes  *******************/
const likesResult = await db.select({
    liked:viewTable.liked
}).from(viewTable).where(and(eq(viewTable.userId, user.id), eq(viewTable.blogId, blog.id)));


let liked:boolean|null = false;
if (likesResult.length) {
    liked = likesResult[0].liked
}
/**********************************************/

/************ fetch views count  **************/
let viewsResult = await db
    .select(
    {viewCount: count(),
    likeCount: count(viewTable.liked)
}
    )
    .from(viewTable)
    .where(eq(viewTable.blogId, blog.id));

let viewStats;
if(viewsResult.length){
    viewStats = viewsResult[0]
}
/**********************************************/
---

<Layout>
    <main class="flex flex-col gap-8 max-w-[800px] mx-auto">
        <h1 class="text-4xl font-bold">{blog.title}</h1>
        <img
            src={blog.image}
            alt={blog.title}
            class="w-full aspect-video mx-auto max-w-[800px] object-cover rounded-box"
        />

        <a class="flex gap-6 align-middle" href={`/profile/${blog.authorId}`}>
            <div class="avatar">
                <div
                    class="w-8 rounded-full ring ring-primary ring-offset-base-100 ring-offset-2"
                >
                    <img
                        src={blog.image}
                        alt={blog.authorName}
                    />
                </div>
            </div>
            <span>By {blog.authorName}</span>
            <span
                >on {
                    new Intl.DateTimeFormat("en-US", {
                        dateStyle: "full",
                        timeStyle: "short",
                    }).format(new Date(blog.createdAt))
                }</span
            >
        </a>

        <hr />

        <div>
            <form method="post" class="flex gap-4 items-center">
                <button name="vote">
                    {
                        liked ? (
                            <Icon name="ph:heart-fill" size={30} />
                        ) : (
                            <Icon name="ph:heart-duotone" size={30} />
                        )
                    }
                </button>
            </form>
            <span>{viewStats?.likeCount??0} likes</span>
            <span>{viewStats?.viewCount??1} views</span>
        </div>

        <hr />

        <article 
        class="prose min-w-full" 
        set:html={blog.content} />

        <div class="space-y-4">
            <h2 class="text-2xl font-semibold">Comments</h2>
            <hr />

            <!-- {
                <form method="post">
                        <input type="text" name="comment" />
                        <p class="mb-2">Post a comment</p>
                        <div class="flex">
                            <input type="text" name="comment" />
                            <button class="btn btn-primary">Post</button>
                        </div>
                </form>
            } -->
            {
                comments.map((comment) => (
                    <div class="">
                        <a
                            class=""
                            href={`profile/${comment.userId}`}
                        >
                            <div class="w-10 rounded-full">
                                <img
                                    alt={comment.name}
                                    src="https://daisyui.com/images/stock/photo-1534528741775-53994a69daeb.jpg"
                                />
                            </div>
                        </a>
                        <div class="">
                            <a href={`/profile/${comment.userId}`}>
                                {comment.name}
                            </a>
                            <time class="text-xs">
                                {new Intl.DateTimeFormat("en-US", {
                                    dateStyle: "short",
                                    timeStyle: "short",
                                }).format(new Date(comment.createdAt))}
                            </time>
                        </div>
                        <div class="">{comment.content}</div>
                    </div>
                ))
            }
        </div>

    </main>
</Layout>